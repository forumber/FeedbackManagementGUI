/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FeedbackManagement.Tables;

import FeedbackManagement.GUI.MainFrame;
import FeedbackManagement.MainApplication;
import FeedbackManagement.Models.Feedback;
import FeedbackManagement.Models.User;
import FeedbackManagement.Table.Models.FeedbackTableModel;
import FeedbackManagement.Table.Models.UserTableModel;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import java.text.SimpleDateFormat;  
import java.util.Date;  
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Serhat Korkmaz
 */
public class UserTablePanel extends javax.swing.JPanel{

    
    List<User> userList;
   
    /**
     * Creates new customizer UserTablePanel
     */
    public UserTablePanel() {
        initComponents();
        userList = null;
        try {
            userList = MainApplication.repository.getUsers(null);
        } catch (SQLException ex) {
            Logger.getLogger(UserTablePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        TableModel tableModel = new UserTableModel(userList);
        jTable1 = new JTable(tableModel);
        jScrollPane1.setViewportView(jTable1);
    }
    
    public Date convertToDate(String s) throws ParseException{
        SimpleDateFormat formatter1=new SimpleDateFormat("dd/MM/yyyy");  
        Date date=formatter1.parse(s);
        return date;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        UserIDTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        UserTypeCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        UserNameTF = new javax.swing.JTextField();
        UserDoBTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        FilterButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("User ID:");

        UserIDTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserIDTFActionPerformed(evt);
            }
        });

        jLabel2.setText("UserType:");

        UserTypeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Admin", "Employee", "Customer" }));

        jLabel3.setText("User Name:");

        UserNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTFActionPerformed(evt);
            }
        });

        jLabel4.setText("Date of Birth:");

        FilterButton.setText("Filter");
        FilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UserTypeCB, 0, 1, Short.MAX_VALUE)
                                .addComponent(UserIDTF, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(UserDoBTF, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                .addComponent(UserNameTF))))
                    .addComponent(FilterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(UserIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(UserTypeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(UserNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UserDoBTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(FilterButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UserIDTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserIDTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserIDTFActionPerformed

    private void UserNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTFActionPerformed

    private void FilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterButtonActionPerformed
        HashMap<String, Object> Filter = new HashMap<String, Object>();

        if (!UserIDTF.getText().isEmpty()) {
            Filter.put("USERID", Integer.parseInt(UserIDTF.getText()));
        }
        if (!UserDoBTF.getText().isEmpty()) {
            try {
                Filter.put("DATEOFBIRTH", convertToDate(UserDoBTF.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(UserTablePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (!UserNameTF.getText().isEmpty()) {
            Filter.put("USR_NAME", UserNameTF.getText());
        }
        if (UserTypeCB.getSelectedItem().toString() != "All") {
            switch (UserTypeCB.getSelectedItem().toString()) {
                case "Admin":
                    Filter.put("USERTYPE", 3);
                    break;
                case "Employee":
                    Filter.put("USERTYPE", 2);
                    break;
                case "Customer":
                    Filter.put("USERTYPE", 1);
                    break;
                default:
                    break;
            }
        }
        try {
            userList = MainApplication.repository.getUsers(Filter);
        } catch (SQLException ex) {
            Logger.getLogger(UserTablePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        TableModel tableModel = new UserTableModel(userList);
        jTable1 = new JTable(tableModel);
        jScrollPane1.setViewportView(jTable1);

    }//GEN-LAST:event_FilterButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FilterButton;
    private javax.swing.JTextField UserDoBTF;
    private javax.swing.JTextField UserIDTF;
    private javax.swing.JTextField UserNameTF;
    private javax.swing.JComboBox<String> UserTypeCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
