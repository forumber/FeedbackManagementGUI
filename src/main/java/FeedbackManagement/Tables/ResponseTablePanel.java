/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FeedbackManagement.Tables;

import FeedbackManagement.MainApplication;
import FeedbackManagement.Models.Feedback;
import FeedbackManagement.Models.Response;
import FeedbackManagement.Table.Models.FeedbackTableModel;
import FeedbackManagement.Table.Models.ResponseTableModel;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author Serhat Korkmaz
 */
public class ResponseTablePanel extends javax.swing.JPanel{
    
    List<Response> responseList;
   
    /**
     * Creates new customizer ResponseTablePanel
     */
    public ResponseTablePanel() {
        Map<String, Object> filter = null;
        initComponents();
        try {
            switch (MainApplication.loggedInUser.getUserType())
            {
                case ADMIN:
                    responseList = MainApplication.repository.getResponses(null);
                    break;
                case CUSTOMER:
                    filter = new HashMap();
                    filter.put("RESPONSE_FIX USERID", MainApplication.loggedInUser.getUserID());
                    responseList = MainApplication.repository.getResponses(filter);
                    break;
                case EMPLOYEE:
                    employeeID.setText(Integer.toString(MainApplication.loggedInUser.getUserID()));
                    employeeID.setEnabled(false);
                    filter = new HashMap();
                    filter.put("empid", MainApplication.loggedInUser.getUserID());
                    responseList = MainApplication.repository.getResponses(filter);
                    break;
            }
            TableModel tableModel = new ResponseTableModel(responseList);
            jTable1 = new JTable(tableModel);
            jScrollPane1.setViewportView(jTable1);
        } catch (SQLException ex) {
            Logger.getLogger(FeedbackTablePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public Date convertToDate(String s) throws ParseException{
        SimpleDateFormat formatter1=new SimpleDateFormat("dd/MM/yyyy");  
        Date date=formatter1.parse(s);
        return date;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        responseIDTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        responseDateTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        feedbackStatusCB = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        employeeID = new javax.swing.JTextField();
        FeedbackIDTF = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Response ID:");

        jLabel2.setText("Response Date:");

        responseDateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responseDateTFActionPerformed(evt);
            }
        });

        jLabel3.setText("Feedback Status:");

        feedbackStatusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Done Success", "Done Fail", "Responded" }));

        jLabel4.setText("Employee ID:");

        jLabel5.setText("Feedback ID:");

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(responseIDTF)
                    .addComponent(FeedbackIDTF)
                    .addComponent(filterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(feedbackStatusCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, 101, Short.MAX_VALUE)
                    .addComponent(responseDateTF, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(employeeID, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(responseIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(responseDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(feedbackStatusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(employeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(FeedbackIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(filterButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void responseDateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responseDateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_responseDateTFActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
         HashMap<String, Object> Filter = new HashMap<String, Object>();

        
            if(!FeedbackIDTF.getText().isEmpty()){
                Filter.put("FEEDID", Integer.parseInt(FeedbackIDTF.getText()));
            }
            if(!employeeID.getText().isEmpty()){
                Filter.put("EMPID", Integer.parseInt(employeeID.getText()));
            }
            if(!responseDateTF.getText().isEmpty()){
             try {
                 Filter.put("RESPONSE_DATE", convertToDate(responseDateTF.getText()));
             } catch (ParseException ex) {
                 Logger.getLogger(ResponseTablePanel.class.getName()).log(Level.SEVERE, null, ex);
             }
            }
            if(!responseIDTF.getText().isEmpty()){
                Filter.put("RESPONSEID", Integer.parseInt(responseIDTF.getText()));
            }
            if(feedbackStatusCB.getSelectedItem().toString() != "All"){
                switch (feedbackStatusCB.getSelectedItem().toString()) {
                    case "Done Success":
                        Filter.put("STATUS", "DONE_SUCCESS");
                        break;
                    case "Done Fail":
                        Filter.put("STATUS", "DONE_FAIL");
                        break;
                    case "Responded":
                        Filter.put("STATUS", "RESPONDED");
                        break;
                    default:
                        break;
                }
            }
            switch (MainApplication.loggedInUser.getUserType())
            {
            case ADMIN:
                break;
            case CUSTOMER:
                Filter.put("customerid", MainApplication.loggedInUser.getUserID());
                break;
            case EMPLOYEE:
                Filter.put("empid", MainApplication.loggedInUser.getUserID());
                break;
            }
            try {
                responseList = MainApplication.repository.getResponses(Filter);
                TableModel tableModel = new ResponseTableModel(responseList);
                jTable1 = new JTable(tableModel);
                jScrollPane1.setViewportView(jTable1);
            } catch (SQLException ex) {
                Logger.getLogger(ResponseTablePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
       
    }//GEN-LAST:event_filterButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FeedbackIDTF;
    private javax.swing.JTextField employeeID;
    private javax.swing.JComboBox<String> feedbackStatusCB;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField responseDateTF;
    private javax.swing.JTextField responseIDTF;
    // End of variables declaration//GEN-END:variables
}
